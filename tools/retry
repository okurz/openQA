#!/bin/sh -e
# shellcheck disable=SC2048,SC2086

RETRY="${RETRY:-3}"
STABILITY_TEST="${STABILITY_TEST:-0}"
# Pass a hook command which is executed if a retry occurs
HOOK="${HOOK:-}"

# Ensure subprocesses are terminated if only this program receives signals
#trap "exit" INT
trap 'kill $(jobs -p) 2>/dev/null' EXIT
#trap "trap - SIGTERM && kill -- -$$" SIGINT SIGTERM EXIT
#trap "exit \$exit_code" INT TERM
#trap "exit_code=\$?; kill 0" EXIT
#trap 'echo TRAP: kill -- -$BASHPID' INT TERM
#trap 'kill 0' INT TERM

run_once() {
    setsid $*
}

if [ "$RETRY" = "0" ]; then
    #echo run_once $*
    run_once $*
else
    n=1
    while :; do
        if [ "$STABILITY_TEST" = "0" ]; then
            [ $n -le "$RETRY" ] || exit 1
            [ $n -eq 0 ] || echo "Retry $n of $RETRY …"
            run_once $* && break
        else
            [ $n -le "$RETRY" ] || exit 0
            run_once $* || exit
            echo "Rerun $n of $RETRY …"
        fi
        if [ -n "$HOOK" ]; then
            echo "Calling retry hook $HOOK"
            RETRY_ATTEMPT=$n "$HOOK"
        fi
        n=$((n+1))
    done
fi
